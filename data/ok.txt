Para representar en Excel una matriz donde cada fila represente una hora y cada columna un lugar, y en la posición i,j este el tribunal que tiene hora i y lugar j, necesitas transformar tus datos de manera que cada combinación única de hora y lugar tenga asignado un tribunal. Esto se puede lograr utilizando la función `pivot_table` de pandas, que permite reorganizar los datos en un formato tabular.

Primero, asegúrate de que tus datos estén en el formato correcto. Luego, puedes utilizar `pivot_table` para crear la matriz deseada. Aquí te muestro cómo hacerlo paso a paso:

1. **Preparar los datos**: Asegúrate de que tu DataFrame `df` tenga las columnas 'Hora', 'Lugar' y 'Tribunal'. Si no es así, puedes renombrar las columnas o ajustar el DataFrame para que coincida con este formato.

2. **Crear la matriz**: Utiliza `pivot_table` para crear la matriz. La función `pivot_table` toma como argumentos el DataFrame, los valores que se deben colocar en las celdas de la matriz (en este caso, 'Tribunal'), y los índices y columnas que definen la estructura de la matriz (en este caso, 'Hora' y 'Lugar').

```python
# Crear la matriz
matriz = df.pivot_table(values='Tribunal', index='Hora', columns='Lugar', aggfunc='first')
```

3. **Guardar la matriz en Excel**: Ahora que tienes la matriz en el formato deseado, puedes guardarla en un archivo Excel. Para hacerlo, puedes utilizar el método `to_excel` de pandas, similar a como lo hiciste antes.

```python
# Guardar la matriz en Excel
with pd.ExcelWriter('./data/horarios_matriz.xlsx') as writer:
    matriz.to_excel(writer, sheet_name='Matriz de Horarios', index=True)
```

Este código creará un archivo Excel llamado `horarios_matriz.xlsx` con una hoja llamada 'Matriz de Horarios'. Cada fila representará una hora, cada columna un lugar, y en la celda i,j se encontrará el tribunal asignado a esa hora y lugar.

Recuerda que este es un ejemplo básico y puedes necesitar ajustar el código según la estructura exacta de tu DataFrame y tus requisitos específicos.